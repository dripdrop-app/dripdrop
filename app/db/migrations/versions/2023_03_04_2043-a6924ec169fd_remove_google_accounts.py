"""remove google accounts

Revision ID: a6924ec169fd
Revises: d05f36087735
Create Date: 2023-03-04 20:43:18.070064

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a6924ec169fd"
down_revision = "d05f36087735"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "youtube_new_subscriptions_email_fkey",
        "youtube_new_subscriptions",
        type_="foreignkey",
    )
    op.execute(
        """UPDATE youtube_new_subscriptions SET email = (
            SELECT users.email FROM users
            JOIN google_accounts on users.email = google_accounts.user_email
            WHERE google_accounts.email = youtube_new_subscriptions.email
        )"""
    )
    op.create_foreign_key(
        "youtube_new_subscriptions_email_fkey",
        "youtube_new_subscriptions",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_subscriptions_email_fkey", "youtube_subscriptions", type_="foreignkey"
    )
    op.execute(
        """UPDATE youtube_subscriptions SET email = (
            SELECT users.email FROM users
            JOIN google_accounts on users.email = google_accounts.user_email
            WHERE google_accounts.email = youtube_subscriptions.email
        )"""
    )
    op.create_foreign_key(
        "youtube_subscriptions_email_fkey",
        "youtube_subscriptions",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_video_likes_email_fkey", "youtube_video_likes", type_="foreignkey"
    )
    op.execute(
        """UPDATE youtube_video_likes SET email = (
            SELECT users.email FROM users
            JOIN google_accounts on users.email = google_accounts.user_email
            WHERE google_accounts.email = youtube_video_likes.email
        )"""
    )
    op.create_foreign_key(
        "youtube_video_likes_email_fkey",
        "youtube_video_likes",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_video_queues_email_fkey", "youtube_video_queues", type_="foreignkey"
    )
    op.execute(
        """UPDATE youtube_video_queues SET email = (
            SELECT users.email FROM users
            JOIN google_accounts on users.email = google_accounts.user_email
            WHERE google_accounts.email = youtube_video_queues.email
        )"""
    )
    op.create_foreign_key(
        "youtube_video_queues_email_fkey",
        "youtube_video_queues",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_video_watches_email_fkey", "youtube_video_watches", type_="foreignkey"
    )
    op.execute(
        """UPDATE youtube_video_watches SET email = (
            SELECT users.email FROM users
            JOIN google_accounts on users.email = google_accounts.user_email
            WHERE google_accounts.email = youtube_video_watches.email
        )"""
    )
    op.create_foreign_key(
        "youtube_video_watches_email_fkey",
        "youtube_video_watches",
        "users",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_table("google_accounts")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "google_accounts",
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("access_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("refresh_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("expires", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("user_email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "last_updated",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_email"],
            ["users.email"],
            name="google_accounts_user_email_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("email", name="google_accounts_pkey"),
        sa.UniqueConstraint("user_email", name="google_accounts_user_email_key"),
    )
    op.drop_constraint(
        "youtube_video_watches_email_fkey", "youtube_video_watches", type_="foreignkey"
    )
    op.create_foreign_key(
        "youtube_video_watches_email_fkey",
        "youtube_video_watches",
        "google_accounts",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_video_queues_email_fkey", "youtube_video_queues", type_="foreignkey"
    )
    op.create_foreign_key(
        "youtube_video_queues_email_fkey",
        "youtube_video_queues",
        "google_accounts",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_video_likes_email_fkey", "youtube_video_likes", type_="foreignkey"
    )
    op.create_foreign_key(
        "youtube_video_likes_email_fkey",
        "youtube_video_likes",
        "google_accounts",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_subscriptions_email_fkey", "youtube_subscriptions", type_="foreignkey"
    )
    op.create_foreign_key(
        "youtube_subscriptions_email_fkey",
        "youtube_subscriptions",
        "google_accounts",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "youtube_new_subscriptions_email_fkey",
        "youtube_new_subscriptions",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "youtube_new_subscriptions_email_fkey",
        "youtube_new_subscriptions",
        "google_accounts",
        ["email"],
        ["email"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###
