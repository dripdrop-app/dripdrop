version: '2.4'
name: dripdrop
services:
  server:
    platform: linux/amd64
    container_name: server
    restart: always
    volumes:
      - ./data/server/logs:/src/logs
      - ./build:/src/build
    env_file: .env
    build:
      dockerfile: dockerfiles/Dockerfile.server
    entrypoint: ./scripts/server.sh
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - $SERVER_PORT:$SERVER_PORT
  worker:
    platform: linux/amd64
    container_name: worker
    restart: always
    volumes:
      - ./data/worker/logs:/src/logs
    env_file: .env
    build:
      dockerfile: dockerfiles/Dockerfile.worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 8000:80
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    healthcheck:
      test: pg_isready -U $POSTGRES_USER
      interval: 10s
      start_period: 1s
      timeout: 1m30s
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    env_file: .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_HOST_AUTH_METHOD: md5
  redis:
    image: redis
    container_name: redis
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      start_period: 1s
      timeout: 1m30s
    volumes:
      - ./data/redis:/data
    env_file: '.env'
    environment:
      REDIS_ARGS: --save 20 1