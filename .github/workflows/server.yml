name: Server

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Export environment
        run: |
          echo "${{ secrets.ENV }}" >> .env
      - name: Run tests
        run: |
          python docker.py --env production --action test
  deploy:
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Export environment
        run: |
          echo "${{ secrets.ENV }}" >> .env
      - name: Export ssh key
        run: |
          echo "${{ secrets.SSH_KEY }}" >> ssh_key && sudo chmod 400 ssh_key
      - name: Install rsync
        run: |
          sudo apt-get -y update
          sudo apt-get -y install rsync
      - name: Backup current repo on VM
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ssh_key -v $SSH_USER@$SSH_HOST "rm -rf ~/dripdrop_old; if [ -d ~/dripdrop ]; then cp -r ~/dripdrop ~/dripdrop_old; fi"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Sync repo to VM
        run: |
          rsync --verbose --recursive --delete -e 'ssh -o StrictHostKeyChecking=no -i ./ssh_key' $(pwd)/ $SSH_USER@$SSH_HOST:~/dripdrop
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Deploy over SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ssh_key -v $SSH_USER@$SSH_HOST "docker system prune -af && cd ~/dripdrop && python3 docker.py --env production --action deploy"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
  rollback:
    if: ${{ failure() && needs.deploy.result == 'failure' }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Export ssh key
        run: |
          echo "${{ secrets.SSH_KEY }}" >> ssh_key && sudo chmod 400 ssh_key
      - name: Rollback repo to previous version
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ssh_key -v $SSH_USER@$SSH_HOST "if [ -d ~/dripdrop_old ]; then cp -r ~/dripdrop_old ~/dripdrop; fi"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Deploy rollback over SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i ./ssh_key -v $SSH_USER@$SSH_HOST "cd ~/dripdrop && python3 docker.py --env production --action deploy"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
